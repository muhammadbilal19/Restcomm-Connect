<?xml version="1.0"?>
<project basedir="." default="release" name="restcomm.release">
  <property environment="sys"/>
  <property location="${ant.file.restcomm.release}/../target" name="release.dir"/>
  <property location="${ant.file.restcomm.release}/../target-tomcat" name="release.tomcat.dir"/>
  <property location="${ant.file.restcomm.release}/../target-as7" name="release.as7.dir"/>
  <property location="${ant.file.restcomm.release}/.." name="base.dir"/>
  <property location="${release.dir}/docs" name="docs.dir"/>
  <property location="${release.dir}/docs/restcomm" name="restcomm.docs.dir"/>
  <property location="${release.tomcat.dir}/docs/restcomm" name="restcomm.docs.tomcat.dir"/>
  <property location="${release.as7.dir}/docs/restcomm" name="restcomm.docs.as7.dir"/>
  <property name="olympus.build" value="18"/>
  <property location="${workspace.restcomm.dir}/configuration" name="configuration.directory"/>

  <!--mobicents binaries versions-->
  <property name="sipservlets-build" value="773"/>
  <property name="restcomm-sipservlets-as7.version" value="3.1.${sipservlets-build}"/>
  <!--<property name="jain-sip-ri.version" value="7.0.3.190" />-->
  <property name="restcomm-media.version" value="6.0"/>
  <property name="restcomm-media.build" value="23"/>
  <!--property name="mobicents-diameter.version" value="6.1.2.GA" /-->

  <!-- mobicents SIP Servlets 7.x on JBoss AS7-->
  <property name="restcomm-sipservlets.as7.distro.version" value="${restcomm-sipservlets-as7.version}-jboss-as-7.2.0.Final"/>
  <property name="restcomm-sipservlets.as7.download.distro.file" value="restcomm-sip-servlets-${restcomm-sipservlets.as7.distro.version}.zip"/>
  <property name="restcomm-sipservlets.as7.download.url" value="https://mobicents.ci.cloudbees.com/job/RestcommSipServlets-Release/${sipservlets-build}/artifact/${restcomm-sipservlets.as7.download.distro.file}"/>
  <property name="restcomm-sipservlets.as7.distro.zip.path" value="${checkout.dir}/${restcomm-sipservlets.as7.download.distro.file}"/>

  <property name="restcomm-media.download.distro.file" value="restcomm-media-server.zip"/>
  <!--<property name="mobicents-media.download.url" value="https://github.com/Mobicents/mediaserver/releases/download/3.0.2.FINAL/mms-server-3.0.2.Final.zip" />-->
  <!--property name="mobicents-media.download.url" value="https://mobicents.ci.cloudbees.com/view/MediaServer/job/Mobicents-MediaServer-2.x/lastSuccessfulBuild/artifact/bootstrap/target/mms-server.zip" /-->
  <!--property name="mobicents-media.download.url" value="https://mobicents.ci.cloudbees.com/view/MediaServer/job/Mobicents-MediaServer-4.x/lastSuccessfulBuild/artifact/bootstrap/target/mms-server.zip"/-->
  <property name="restcomm-media.download.url" value="https://mobicents.ci.cloudbees.com/view/MediaServer/job/Restcomm-MediaServer-6.x/${restcomm-media.build}/artifact/bootstrap/target/restcomm-media-server.zip"/>
  <property name="restcomm-media.distro.zip.path" value="${checkout.dir}/${restcomm-media.download.distro.file}"/>

  <!-- <property name="restcomm-olympus.download.url" value="https://mobicents.ci.cloudbees.com/job/Olympus/${olympus.build}/artifact/target/olympus.war"/> -->
  <property name="restcomm-olympus.download.url" value="https://mobicents.ci.cloudbees.com/job/Olympus/lastSuccessfulBuild/artifact/target/olympus.war"/>
  <property name="restcomm-olympus.path" value="${configuration.directory}/olympus.war"/>

  <!-- Determine RVD retrieval URL

       If 'rvd.version' command-line parameter is set, the binary is retrieved from sonatype maven repo.
       Otherwise, the latest successfull binary from Jenkins is used.

       Result assigned to: restcomm-rvd.download.url
  -->
  <property name="restcomm-rvd.path" value="${configuration.directory}/restcomm-rvd.war"/>
  <condition property="restcomm-rvd.download.url" value="https://oss.sonatype.org/content/groups/public/org/restcomm/restcomm-connect-rvd/${rvd.version}/restcomm-connect-rvd-${rvd.version}.war" else="https://mobicents.ci.cloudbees.com/view/VisualDesigner/job/VisualDesigner/lastSuccessfulBuild/artifact/designer/target/restcomm-rvd.war">
    <isset property="rvd.version"></isset>
  </condition>
  <echo>Will retrieve RVD from ${restcomm-rvd.download.url}</echo>
  <!-- check actual availability of RVD at the determined URL-->
  <fail message="RVD binary not available at ${restcomm-rvd.download.url}">
    <condition>
      <not>
        <http url="${restcomm-rvd.download.url}"></http>
      </not>
    </condition>
  </fail>

  <property name="release.build.goals" value="clean install -Dmaven.test.skip=true"/>
  <property name="release.build.test.goals" value="clean install -Dmaven.test.failure.ignore=true"/>
  <property name="release.ts.deploy.goals" value="clean deploy"/>

  <condition else="mvn" property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat">
    <os family="windows"/>
  </condition>

  <taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="${ant.file.restcomm.release}/../ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <target depends="clean,get-deps,extract-deps,build-restcomm, copy-restcomm, copy-docs, make-final-zip" name="release"/>
  <target depends="get-deps,extract-deps,build-restcomm, copy-restcomm, copy-docs, make-final-zip" name="release-no-clean"/>

  <target name="deploy">
    <ant antfile="${ant.file.restcomm.release}" target="release">
      <property name="release.build.goals" value="${release.ts.deploy.goals}"/>
    </ant>
  </target>

  <target name="deploy-no-clean">
    <ant antfile="${ant.file.restcomm.release}" target="release-no-clean">
      <property name="release.build.goals" value="${release.ts.deploy.goals}"/>
    </ant>
  </target>

  <target name="release-test">
    <ant antfile="${ant.file.restcomm.release}" target="release">
      <property name="release.build.goals" value="${release.build.test.goals}"/>
    </ant>
  </target>

  <target name="release-test-no-clean">
    <ant antfile="${ant.file.restcomm.release}" target="release-no-clean">
      <property name="release.build.goals" value="${release.build.test.goals}"/>
    </ant>
  </target>

  <!--GET mobicents-Sip=Servlets & mobicents-Media-Server & mobicents Diameter - downloads-->

  <target depends="get-restcomm-sipservlets-as7,get-restcomm-media,get-olympus,get-rvd" name="get-deps"/>
  <target depends="extract-restcomm-sipservlets-as7,extract-restcomm-media" name="extract-deps"/>

  <!--SipServlets JBoss AS7 -->
  <available file="${restcomm-sipservlets.as7.distro.zip.path}" property="got.restcomm-sipservlets-as7"/>
  <target name="get-restcomm-sipservlets-as7" unless="got.restcomm-sipservlets-as7">
    <echo>Downloading Restcomm SipServlets JBoss AS7 version: ${restcomm-sipservlets-as7.version}</echo>
    <exec executable="wget" failonerror="true">
      <arg value="${restcomm-sipservlets.as7.download.url}"/>
    </exec>
    <move file="${base.dir}/${restcomm-sipservlets.as7.download.distro.file}" todir="${checkout.dir}"/>
  </target>

  <target depends="get-restcomm-sipservlets-as7" name="extract-restcomm-sipservlets-as7">
    <delete dir="${checkout.restcomm-sipservlets-as7.dir}" failonerror="false"/>
    <unzip dest="${release.as7.dir}" src="${restcomm-sipservlets.as7.distro.zip.path}">
      <mapper from="restcomm-sip-servlets-${restcomm-sipservlets-as7.version}-jboss-as-7.2.0.Final/*" to="*" type="glob"/>
    </unzip>
  </target>

  <!--Media-->
  <available file="${restcomm-media.distro.zip.path}" property="got.restcomm-media"/>
  <target name="get-restcomm-media" unless="got.restcomm-media">
    <echo>Downloading Restcomm Media version: ${restcomm-media.version}.${restcomm-media.build}</echo>
    <exec executable="wget" failonerror="true">
      <arg value="${restcomm-media.download.url}"/>
    </exec>
    <move file="${base.dir}/restcomm-media-server.zip" todir="${checkout.dir}"/>
    <move file="${checkout.dir}/restcomm-media-server.zip" tofile="${checkout.dir}/${restcomm-media.download.distro.file}"/>
  </target>

  <!--Olympus-->
  <available file="${restcomm-olympus.path}" property="got.olympus"/>
  <target name="get-olympus" unless="got.olympus">
    <echo>Downloading Restcomm Olympus version: ${olympus.version}</echo>
    <exec executable="wget" failonerror="true">
      <arg value="${restcomm-olympus.download.url}"/>
    </exec>
    <move file="${base.dir}/olympus.war" todir="${configuration.directory}"/>
  </target>

  <!-- RVD -->
  <available file="${restcomm-rvd.path}" property="got.rvd"/>
  <target name="get-rvd" unless="got.rvd">
    <echo>Downloading latest version of Visual Designer</echo>
    <exec executable="wget" failonerror="true">
      <arg value="${restcomm-rvd.download.url}"/>
    </exec>
    <move file="${base.dir}/restcomm-rvd.war" todir="${configuration.directory}"/>
  </target>

  <target depends="get-restcomm-media" name="extract-restcomm-media">
    <delete dir="${checkout.restcomm-media.dir}" failonerror="false"/>
    <delete dir="${release.as7.dir}/mobicents-media-server" failonerror="false"/>
    <!--unzip src="${mobicents-media.distro.zip.path}" dest="${release.dir}/mobicents-media"/-->
    <unzip dest="${release.as7.dir}/mediaserver" src="${restcomm-media.distro.zip.path}"/>
    <move todir="${release.as7.dir}/mediaserver">
      <fileset dir="${release.as7.dir}/mediaserver/restcomm-media-server"/>
    </move>
    <!-- copy failonerror="true" file="${configuration.directory}/mms-server-beans.xml" tofile="${release.as7.dir}/mediaserver/deploy/server-beans.xml"/ -->
    <chmod dir="${release.as7.dir}/mediaserver" includes="**/*.sh" perm="ugo+rx"/>
    <chmod dir="${release.as7.dir}/mediaserver/bin" includes="**/*.sh" perm="ugo+rx"/>
    <chmod dir="${release.as7.dir}/mediaserver/.autoconfig" includes="**/*.sh" perm="ugo+rx"/>
    <chmod dir="${release.as7.dir}/mediaserver/.autoconfig/autoconfig.d" includes="**/*.sh" perm="ugo+rx"/>
  </target>

  <target name="build-restcomm">
    <echo>Building Restcomm</echo>
    <echo>Restcomm workspace dir: "${workspace.restcomm.dir}"</echo>
    <exec dir="${workspace.restcomm.dir}" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals}"/>
    </exec>
    <!--
    <exec dir="${workspace.restcomm.dir}/restcomm.docs" executable="${mvn.executable}" failonerror="true">
      <arg line="${release.build.goals} -Pmobicents"/>
    </exec>
  -->
    <exec dir="${workspace.restcomm.dir}/restcomm.provisioning.number.api" executable="${mvn.executable}" failonerror="true">
      <arg line="javadoc:javadoc"/>
    </exec>
  </target>

  <target name="copy-restcomm">
    <echo>Copy restcomm
    </echo>
    <!--JBoss AS7-->
    <delete failonerror="false" file="${release.as7.dir}/standalone/configuration/dars/mobicents-dar.properties"/>
    <delete failonerror="false" file="${release.as7.dir}/standalone/deployments/media-jsr309-servlet.war"/>
    <delete failonerror="false" file="${release.as7.dir}/standalone/deployments/click2call.war"/>
    <move file="${release.as7.dir}/standalone/deployments/websockets-sip-servlet.war" tofile="${release.as7.dir}/standalone/deployments/webrtc.war"/>
    <copy failonerror="true" file="${configuration.directory}/mobicents-dar.properties" tofile="${release.as7.dir}/standalone/configuration/dars/mobicents-dar.properties"/>
    <copy failonerror="true" file="${configuration.directory}/mss-sip-stack.properties" overwrite="true" tofile="${release.as7.dir}/standalone/configuration/mss-sip-stack.properties"/>
    <!--Use exploded WAR-->
    <copy failonerror="true" todir="${release.as7.dir}/standalone/deployments/restcomm.war">
      <fileset dir="${workspace.restcomm.dir}/restcomm.application/target/restcomm">
        <include name="**/*"/>
      </fileset>
    </copy>
    <touch file="${release.as7.dir}/standalone/deployments/restcomm.war.dodeploy"/>

    <!-- Copy Admin UI -->
    <copy failonerror="true" todir="${release.as7.dir}/standalone/deployments/restcomm-management.war">
      <fileset dir="${workspace.restcomm.dir}/restcomm.ui/target/restcomm-management">
        <include name="**/*"/>
      </fileset>
    </copy>
    <touch file="${release.as7.dir}/standalone/deployments/restcomm-management.war.dodeploy"/>

    <!-- Copy RVD -->
    <unzip dest="${release.as7.dir}/standalone/deployments/restcomm-rvd.war" src="${configuration.directory}/restcomm-rvd.war"/>
    <touch file="${release.as7.dir}/standalone/deployments/restcomm-rvd.war.dodeploy"/>

    <!--Copy Rvd ES Demo-->
    <copy failonerror="true" file="${configuration.directory}/RvdExternalServicesDemo.war" tofile="${release.as7.dir}/standalone/deployments/RvdExternalServicesDemo.war"/>
    <touch file="${release.as7.dir}/standalone/deployments/RvdExternalServicesDemo.war.dodeploy"/>

    <!-- Copy Dialogic JSR 309 connector -->
    <copy failonerror="true" file="${configuration.directory}/dlgmsc-5.0-alpha.jar" toDir="${release.as7.dir}/standalone/deployments/restcomm.war/WEB-INF/lib"/>
    <copy failonerror="true" file="${configuration.directory}/dlgcsmiltypes-4.1.429.jar" toDir="${release.as7.dir}/standalone/deployments/restcomm.war/WEB-INF/lib"/>
    <copy failonerror="true" file="${configuration.directory}/msmltypes-4.1.429.jar" toDir="${release.as7.dir}/standalone/deployments/restcomm.war/WEB-INF/lib"/>

    <!-- Copy Config scripts -->
    <!--copy toDir="${release.as7.dir}/tools/config-scripts" failonerror="true">
		<fileset dir="${configuration.directory}/config-scripts">
			<include name="**/*"/>
			<exclude name="as7-config-scripts/**"/>
		</fileset>
	</copy>
-->
    <copy failonerror="true" toDir="${release.as7.dir}/bin/restcomm">
      <fileset dir="${configuration.directory}/config-scripts/as7-config-scripts/restcomm">
        <include name="**/*"/>
      </fileset>
    </copy>

    <chmod dir="${release.as7.dir}/bin" includes="**/*.sh" perm="ugo+rx"/>

    <!-- Replace webrtc.war with Olympus.war -->
    <delete failonerror="false" file="${release.as7.dir}/standalone/deployments/webrtc.war"/>
    <copy failonerror="true" file="${configuration.directory}/olympus.war" tofile="${release.as7.dir}/standalone/deployments/olympus.war"/>
    <touch file="${release.as7.dir}/standalone/deployments/olympus.war.dodeploy"/>
  </target>

  <target name="copy-docs">
    <!--docs-->
    <mkdir dir="${restcomm.docs.dir}"/>
    <copy failonerror="true" file="${configuration.directory}/README" todir="${restcomm.docs.dir}">
      <!-- <fileset dir="${workspace.mobicents-restcomm.dir}/restcomm.docs/jdocbook-mobicents/target/docbook/publish/en-US">
		                <include name="**/*" />
		        </fileset> -->
    </copy>
    <mkdir dir="${restcomm.docs.dir}/phone-number-provisioning-javadocs"/>
    <copy failonerror="true" todir="${restcomm.docs.dir}/phone-number-provisioning-javadocs">
      <fileset dir="${workspace.restcomm.dir}/restcomm.provisioning.number.api/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!--docs tomcat-->
    <mkdir dir="${restcomm.docs.tomcat.dir}"/>
    <copy failonerror="true" file="${configuration.directory}/README" todir="${restcomm.docs.tomcat.dir}">
      <!-- <fileset dir="${workspace.mobicents-restcomm.dir}/restcomm.docs/jdocbook-mobicents/target/docbook/publish/en-US">
		                <include name="**/*" />
		        </fileset> -->
    </copy>
    <mkdir dir="${restcomm.docs.tomcat.dir}/phone-number-provisioning-javadocs"/>
    <copy failonerror="true" todir="${restcomm.docs.tomcat.dir}/phone-number-provisioning-javadocs">
      <fileset dir="${workspace.restcomm.dir}/restcomm.provisioning.number.api/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!--docs JBoss AS7-->
    <mkdir dir="${restcomm.docs.as7.dir}"/>
    <copy failonerror="true" file="${configuration.directory}/README" todir="${restcomm.docs.as7.dir}">
      <!-- <fileset dir="${workspace.mobicents-restcomm.dir}/restcomm.docs/jdocbook-mobicents/target/docbook/publish/en-US">
                                <include name="**/*" />
                        </fileset> -->
    </copy>
    <mkdir dir="${restcomm.docs.as7.dir}/phone-number-provisioning-javadocs"/>
    <copy failonerror="true" todir="${restcomm.docs.as7.dir}/phone-number-provisioning-javadocs">
      <fileset dir="${workspace.restcomm.dir}/restcomm.provisioning.number.api/target/site/apidocs">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <target depends="set-time-stamp" name="make-final-zip">
    <fixcrlf eof="remove" eol="lf" includes="*.sh" srcdir="${release.as7.dir}/bin"/>

    <zip destfile="${base.dir}/Restcomm-JBoss-AS7-${restcomm.release.version}.zip" filesonly="false">
      <zipfileset dir="${release.as7.dir}/bin" filemode="755" prefix="Restcomm-JBoss-AS7-${restcomm.release.version}/bin">
        <include name="*.sh"/>
        <include name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${release.as7.dir}/bin" prefix="Restcomm-JBoss-AS7-${restcomm.release.version}/bin">
        <exclude name="*.sh"/>
        <exclude name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${release.as7.dir}/mediaserver" filemode="755" prefix="Restcomm-JBoss-AS7-${restcomm.release.version}/mediaserver">
        <include name="*.sh"/>
        <include name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${release.as7.dir}/mediaserver" prefix="Restcomm-JBoss-AS7-${restcomm.release.version}/mediaserver">
          <exclude name="*.sh"/>
          <exclude name="**/*.sh"/>
      </zipfileset>
      <zipfileset dir="${release.as7.dir}" excludes="**/bin/** **/server/*/log/** **/server/*/tmp/** **/server/*/work/** **/server/tmp/** **/mediaserver/**" prefix="Restcomm-JBoss-AS7-${restcomm.release.version}"/>
    </zip>
  </target>

  <target name="set-time-stamp" unless="skip.timestamp">
    <tstamp>
      <format pattern="yyMMddHHmm" property="time.stamp"/>
    </tstamp>
  </target>

  <target name="clean">
    <delete dir="${release.as7.dir}"/>
  </target>
</project>
