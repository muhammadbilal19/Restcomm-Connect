<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  @author brainslog@gmail.com (Alexandre Mendonca)
-->
<mapper namespace="org.mobicents.servlet.sip.restcomm.dao.UsageDao">

	<select id="getDailyCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			<!-- Without explicit BIGINT to get Long, we get ClassCastException  -->
			CAST(${usageExprPre}"${usageExprCol}"${usageExprSuf} AS BIGINT) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			TO_CHAR("date_created", 'YYYY-MM-DD') AS "start_date",
			TO_CHAR(DATE_ADD("date_created", INTERVAL 1 DAY), 'YYYY-MM-DD') AS "end_date",
			CONCAT(#{uri},
				'?Category=', #{category},
				'&amp;StartDate=', TO_CHAR("date_created", 'YYYY-MM-DD'),
				'&amp;EndDate=', TO_CHAR(DATE_ADD("date_created", INTERVAL 1 DAY), 'YYYY-MM-DD')
				) AS "uri"
		FROM
			"${tableName}"
		WHERE
			"account_sid"=#{sid} AND
			"date_created" &gt;= #{startDate} AND
			"date_created" &lt; DATE_ADD(#{endDate},INTERVAL 1 DAY)
		GROUP BY
			"start_date", "end_date", "account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<select id="getMonthlyCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			<!-- Without explicit BIGINT to get Long, we get ClassCastException  -->
			CAST(${usageExprPre}"${usageExprCol}"${usageExprSuf} AS BIGINT) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			<!-- select the highest lower bound -->
			<!-- GREATEST(CONCAT(TO_CHAR("date_created", 'YYYY-MM'), '-01'), #{startDate}) AS "start_date", -->
			CONCAT(TO_CHAR("date_created", 'YYYY-MM'), '-01') AS "start_date",
			<!-- select the lowest upper bound -->
			<!-- LEAST(TO_CHAR(LAST_DAY("date_created"), 'YYYY-MM-DD'), #{endDate}) AS "end_date", -->
			TO_CHAR(LAST_DAY("date_created"), 'YYYY-MM-DD') AS "end_date",
			CONCAT(#{uri},
				'?Category=', #{category},
				<!--
				'&amp;StartDate=', GREATEST(CONCAT(TO_CHAR("date_created", 'YYYY-MM'), '-01'), #{startDate}),
				'&amp;EndDate=', LEAST(TO_CHAR(LAST_DAY("date_created"), 'YYYY-MM-DD'), #{endDate})
				 -->
				'&amp;StartDate=', CONCAT(TO_CHAR("date_created", 'YYYY-MM'), '-01'),
				'&amp;EndDate=', TO_CHAR(LAST_DAY("date_created"), 'YYYY-MM-DD')
				) AS "uri"
		FROM
			"${tableName}"
		WHERE
			"account_sid"=#{sid} AND
			"date_created" &gt;= #{startDate} AND
			"date_created" &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)
		GROUP BY
			"start_date", "end_date", "account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<select id="getYearlyCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			<!-- Without explicit BIGINT to get Long, we get ClassCastException  -->
			CAST(${usageExprPre}"${usageExprCol}"${usageExprSuf} AS BIGINT) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			<!-- select the highest lower bound -->
			<!-- GREATEST(CONCAT(YEAR("date_created"), '-01-01'), #{startDate}) AS "start_date", -->
			CONCAT(YEAR("date_created"), '-01-01') AS "start_date",
			<!-- select the lowest upper bound -->
			<!-- LEAST(CONCAT(YEAR("date_created"), '-12-31'), #{endDate}) AS "end_date", -->
			CONCAT(YEAR("date_created"), '-12-31') AS "end_date",
			CONCAT(#{uri},
				'?Category=', #{category},
				<!--
				'&amp;StartDate=', GREATEST(CONCAT(YEAR("date_created"), '-01-01'), #{startDate}),
				'&amp;EndDate=', LEAST(CONCAT(YEAR("date_created"), '-12-31'), #{endDate})
				 -->
				'&amp;StartDate=', CONCAT(YEAR("date_created"), '-01-01'),
				'&amp;EndDate=', CONCAT(YEAR("date_created"), '-12-31')
				) AS "uri"
		FROM
			"${tableName}"
		WHERE
			"account_sid"=#{sid} AND
			"date_created" &gt;= #{startDate} AND
			"date_created" &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)
		GROUP BY
			"start_date", "end_date", "account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<select id="getAllTimeCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			<!-- Without explicit BIGINT to get Long, we get ClassCastException  -->
			CAST(${usageExprPre}"${usageExprCol}"${usageExprSuf} AS BIGINT) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			TO_CHAR(#{startDate}, 'YYYY-MM-DD') AS "start_date",
			TO_CHAR(#{endDate}, 'YYYY-MM-DD') AS "end_date",
			CONCAT(#{uri},
				'?Category=', #{category},
				'&amp;StartDate=', TO_CHAR(#{startDate}, 'YYYY-MM-DD'),
				'&amp;EndDate=', TO_CHAR(#{endDate}, 'YYYY-MM-DD')
				) AS "uri"
		FROM
			"${tableName}"
		WHERE
			"account_sid"=#{sid} AND
			"date_created" &gt;= #{startDate} AND
			"date_created" &lt; DATE_ADD(#{endDate}, INTERVAL 1 DAY)
		GROUP BY
			"account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<!--
	<select id="getTodayCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			COALESCE(SUM("duration"),0) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			TO_CHAR(TODAY(), 'YYYY-MM-DD') AS "start_date",
			TO_CHAR(TODAY(), 'YYYY-MM-DD') as "end_date",
			'/todo' AS "uri"
		FROM
			"restcomm_call_detail_records"
		WHERE
			"account_sid"=#{sid} AND
			EXTRACT (DAY FROM "date_created") = EXTRACT (DAY FROM TODAY()) AND
			EXTRACT (MONTH FROM "date_created") = EXTRACT (MONTH FROM TODAY()) AND
			EXTRACT (YEAR FROM "date_created") = EXTRACT (YEAR FROM TODAY())
		GROUP BY
			EXTRACT (MONTH FROM "date_created"), "account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<select id="getYesterdayCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			COALESCE(SUM("duration"),0) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			TO_CHAR(DATE_SUB(TODAY(), INTERVAL 1 DAY), 'YYYY-MM-DD') AS "start_date",
			TO_CHAR(DATE_SUB(TODAY(), INTERVAL 1 DAY), 'YYYY-MM-DD') as "end_date",
			'/todo' AS "uri"
		FROM
			"restcomm_call_detail_records"
		WHERE
			"account_sid"=#{sid} AND
			EXTRACT (DAY FROM "date_created") = EXTRACT (DAY FROM DATE_SUB(TODAY(), INTERVAL 1 DAY)) AND
			EXTRACT (MONTH FROM "date_created") = EXTRACT (MONTH FROM DATE_SUB(TODAY(), INTERVAL 1 DAY)) AND
			EXTRACT (YEAR FROM "date_created") = EXTRACT (YEAR FROM DATE_SUB(TODAY(), INTERVAL 1 DAY))
		GROUP BY
			"account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<select id="getThisMonthCalls" parameterType="string" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			COALESCE(SUM("duration"),0) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			CONCAT(TO_CHAR(TODAY(), 'YYYY-MM-'),'01') AS "start_date",
			TO_CHAR(LAST_DAY(TODAY()), 'YYYY-MM-DD') as "end_date",
			'/todo' AS "uri"
		FROM
			"restcomm_call_detail_records"
		WHERE
			"account_sid"=#{sid} AND
			EXTRACT (MONTH FROM "date_created") = EXTRACT (MONTH FROM TODAY()) AND
			EXTRACT (YEAR FROM "date_created") = EXTRACT (YEAR FROM TODAY())
		GROUP BY
			EXTRACT (MONTH FROM "date_created"), "account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>

	<select id="getLastMonthCalls" parameterType="map" resultType="hashmap">
		SELECT
			#{category} AS "category",
			"account_sid",
			"api_version",
			COUNT(1) as "count",
			COALESCE(SUM("duration"),0) as "usage",
			SUM(CONVERT("price",SQL_FLOAT)) as "price",
			CONCAT(TO_CHAR(LAST_DAY(DATE_SUB(TODAY(), INTERVAL 1 MONTH)), 'YYYY-MM-'),'01') AS "start_date",
			TO_CHAR(LAST_DAY(DATE_SUB(TODAY(), INTERVAL 1 MONTH)), 'YYYY-MM-DD') as "end_date",
			'/todo' AS "uri"

		FROM
			"restcomm_call_detail_records"
		WHERE
			"account_sid"=#{sid} AND
			EXTRACT (MONTH FROM "date_created") = EXTRACT (MONTH FROM DATE_SUB(TODAY(), INTERVAL 1 MONTH)) AND
			EXTRACT (YEAR FROM "date_created") = EXTRACT (YEAR FROM DATE_SUB(TODAY(), INTERVAL 1 MONTH))
		GROUP BY
			EXTRACT (MONTH FROM "date_created"), "account_sid", "api_version"
		ORDER BY
			"start_date"
	</select>
	-->
</mapper>
