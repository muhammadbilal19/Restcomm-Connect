<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  TeleStax, Open Source Cloud Communications
  ~  Copyright 2011-2016, Telestax Inc and individual contributors
  ~  by the @authors tag.
  ~
  ~  This program is free software: you can redistribute it and/or modify
  ~  under the terms of the GNU Affero General Public License as
  ~  published by the Free Software Foundation; either version 3 of
  ~  the License, or (at your option) any later version.
  ~
  ~  This program is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~  GNU Affero General Public License for more details.
  ~
  ~  You should have received a copy of the GNU Affero General Public License
  ~  along with this program.  If not, see <http://www.gnu.org/licenses/>
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  @author gvagenas@telestax.com (George Vagenas)
-->
<mapper namespace="org.restcomm.connect.dao.ExtensionsConfigurationDao">
  <insert id="addConfiguration" parameterType="map">
    INSERT INTO restcomm_extensions_configuration (sid, extension, configuration_data, configuration_type,
    date_created, date_updated, enabled) VALUES (#{sid}, #{extension}, #{configuration_data}, #{configuration_type},
    #{date_created}, #{date_updated}, #{enabled});
  </insert>

  <update id="updateConfiguration" parameterType="map">
    UPDATE restcomm_extensions_configuration SET configuration_data=#{configuration_data}, configuration_type=#{configuration_type}, date_updated=#{date_updated}, enabled=#{enabled}
    WHERE sid=#{sid}
  </update>

  <select id="getConfigurationByName" parameterType="map" resultType="hashmap">
    SELECT * FROM restcomm_extensions_configuration WHERE extension=#{extension};
  </select>

  <select id="getConfigurationBySid" parameterType="map" resultType="hashmap">
    SELECT * FROM restcomm_extensions_configuration WHERE sid=#{sid};
  </select>

  <select id="getAllConfiguration" parameterType="map" resultType="hashmap">
    SELECT * FROM restcomm_extensions_configuration;
  </select>

  <delete id="deleteConfigurationBySid" parameterType="string">
    DELETE FROM restcomm_extensions_configuration WHERE sid=#{sid};
  </delete>

  <delete id="deleteConfigurationByName" parameterType="string">
    DELETE FROM restcomm_extensions_configuration WHERE extension=#{extension};
  </delete>

  <select id="getDateUpdatedByName" parameterType="String" resultType="date">
    SELECT date_updated FROM restcomm_extensions_configuration WHERE extension=#{extension};
  </select>

  <select id="getDateUpdatedBySid" parameterType="String" resultType="date">
    SELECT date_updated FROM restcomm_extensions_configuration WHERE sid=#{sid};
  </select>

  <select id="getAccountExtensionConfiguration" parameterType="map" resultType="hashmap">
    SELECT configuration_data, account_sid AS "sid", extension_sid AS "extension" FROM restcomm_accounts_extensions
    WHERE account_sid=#{account_sid} AND extension_sid=#{extension_sid};
  </select>

  <insert id="addAccountExtensionConfiguration" parameterType="map">
    INSERT INTO restcomm_accounts_extensions (account_sid, extension_sid, configuration_data)
    VALUES (#{account_sid}, #{extension_sid}, #{configuration_data});
  </insert>

  <update id="updateAccountExtensionConfiguration" parameterType="map">
    UPDATE restcomm_accounts_extensions SET configuration_data=#{configuration_data}
    WHERE account_sid=#{account_sid} AND extension_sid=#{extension_sid};
  </update>

  <delete id="deleteAccountExtensionConfiguration" parameterType="map">
    DELETE FROM restcomm_accounts_extensions
    WHERE account_sid=#{account_sid} AND extension_sid=#{extension_sid};
  </delete>
</mapper>
